#!/usr/bin/env bash

# Usage: Create .diff files based on your branches.

# If you already successfully applied a patch in a branch and fixed any possible errors, then the created .diff will
# also reflect those changes and when applying that patch, there will also be no errors.
# These diffs can be applied directly to your master branch.

git checkout master &&
dotfiles="$HOME/.config/dwm"
diffdir="${dotfiles}/fixed_patch_diffs/"
olddiffdir="${dotfiles}/fixed_patch_diffs/old/"
commit_date=$(git show --format="%ci %cr" original/master | head -n 1 | awk '{print $1}')
curr_date=$(date --iso-8601)
rm -rf "$olddiffdir" &&
mkdir -p "$olddiffdir" &&
mkdir -p "$diffdir" &&
mv "$diffdir"*.diff "$olddiffdir" || true &&
make clean && rm -f config.h && git reset --hard HEAD &&
for branch in $(git for-each-ref --format='%(refname)' refs/heads/ | cut -d'/' -f3); do
	if [ "$branch" != "master" ];then
        # ':!folder' is a git feature to exclude paths and files. It can also be used in this format ':(exclude)folder'
		git diff master..$branch -- . ':!patches' > "${diffdir}dwm_${branch}_remote=${commit_date}_today=${curr_date}.diff"
	fi
done
